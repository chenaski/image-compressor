name: Lint

on:
  push:
  pull_request:

jobs:
  lint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.10.0

      - name: Checkout
        uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: pnpm

      - name: Install deps
        run: pnpm install

      - name: Lint
        run: pnpm lint

  prettier:
    name: Prettier
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.10.0

      - name: Checkout
        uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: pnpm

      - name: Install deps
        run: pnpm install

      - name: Check formatting
        run: pnpm format

  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - app_name: website
          - app_name: backend-api
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.10.0

      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        env:
          repository: ${{ secrets.DOCKERHUB_USERNAME }}/image-compressor-${{ matrix.app_name }}
          tags: ${{ github.ref_name }}-${{ github.sha }}
          cache_tag: buildcache
        with:
          file: apps/${{ matrix.app_name }}/Dockerfile
          push: true
          tags: ${{ env.repository }}:${{ env.tags }},${{ env.repository }}:latest
          cache-from: type=registry,ref=${{ env.repository }}:${{ env.cache_tag }}
          cache-to: type=registry,ref=${{ env.repository }}:${{ env.cache_tag }},mode=max
