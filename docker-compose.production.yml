services:
  webserver:
    image: nginx:1-alpine
    environment:
      DOMAIN: ${DOMAIN}
      WEBSITE_PORT: ${WEBSITE_PORT}
      API_PORT: ${BACKEND_API_PORT}
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - .docker/nginx/templates:/etc/nginx/templates
      - .docker/nginx/options-ssl-nginx.conf:/etc/nginx/options-ssl-nginx.conf
      - .docker/nginx/ssl-dhparams.pem:/etc/nginx/ssl-dhparams.pem
      - ${CERTBOT_PATH}/conf:/etc/letsencrypt:ro
      - ${CERTBOT_PATH}/www:/var/www/certbot:ro

  website:
    image: ${DOCKERHUB_USERNAME}/image-compressor-website:${IMAGE_TAG}
    restart: always
    environment:
      PORT: ${WEBSITE_PORT}
      API_HOST: backend-api
      API_PORT: ${BACKEND_API_PORT}
      SESSION_COOKIE_SECRET: ${SESSION_COOKIE_SECRET}
      SOURCE_IMAGES_PATH: /opt/data/source
    ports:
      - ${WEBSITE_PORT}:${WEBSITE_PORT}
    volumes:
      - ${SOURCE_IMAGES_PATH}:/opt/data/source
      - ${PROCESSED_IMAGES_PATH}:/opt/data/processed

  backend-api:
    image: ${DOCKERHUB_USERNAME}/image-compressor-backend-api:${IMAGE_TAG}
    restart: always
    environment:
      PORT: ${BACKEND_API_PORT}
      REDIS_URL: ${REDIS_URL}
      SESSION_COOKIE_SECRET: ${SESSION_COOKIE_SECRET}
    ports:
      - ${BACKEND_API_PORT}:${BACKEND_API_PORT}

  image-processor:
    image: ${DOCKERHUB_USERNAME}/image-compressor-image-processor:${IMAGE_TAG}
    restart: always
    environment:
      REDIS_URL: ${REDIS_URL}
      SOURCE_IMAGES_PATH: /opt/data/source
      PROCESSED_IMAGES_PATH: /opt/data/processed
    depends_on:
      - redis
    volumes:
      - ${SOURCE_IMAGES_PATH}:/opt/data/source
      - ${PROCESSED_IMAGES_PATH}:/opt/data/processed

  redis:
    image: redis:7-alpine
    restart: always
    volumes:
      - ${REDIS_STORE_PATH}:/data
    command: redis-server --save 20 1 --loglevel warning
